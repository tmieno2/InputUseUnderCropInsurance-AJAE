
```{r}
library(ggplot2)
library(dplyr)
library(data.table)
```

# Figure 1: Indemnity trigger region

```{r}
APH <- 150
cov_level <- 0.8
pp <- 2
N <- 1000

hp_min <- 0.9
hp_max <- 3
data <- data.table(
  hp = seq(hp_min, hp_max, length = N),
  yield = seq(50, 250, length = N)
)
data[, y_rp_hpe := pp * APH * cov_level / yield]
data[y_rp_hpe > hp_max, y_rp_hpe := hp_max]
data[, y_rp := pmax(hp, pp) * APH * cov_level / yield]
data[y_rp > hp_max, y_rp := hp_max]
data[, y_yp := hp_max]

cols <- c(
  "B" = "blue",
  "C" = "red",
  "A" = "green"
)

cols_line <- c("Projected Price" = "black", "Coverage Level times APH" = "blue")

(
  g_trigger_area <-
    ggplot() +
    geom_ribbon(
      data = data[yield < cov_level * APH & y_rp_hpe < hp_max, ],
      aes(x = yield, ymin = y_rp_hpe, ymax = hp_max, fill = "A"),
      alpha = 0.2, color = "black"
    ) +
    geom_ribbon(
      data = data[yield < cov_level * APH, ],
      aes(x = yield, ymin = hp_min, ymax = y_rp_hpe, fill = "B"),
      alpha = 0.2, color = "black"
    ) +
    geom_ribbon(
      data = data[yield > APH * cov_level, ],
      aes(x = yield, ymin = hp_min, ymax = y_rp_hpe, fill = "C"),
      alpha = 0.2, color = "black"
    ) +
    geom_line(data = data.table(y = seq(hp_min, 3, 0.1), x = 50), aes(y = y, x = x)) +
    geom_line(data = data.table(y = seq(hp_min, 3, 0.1), x = 120), aes(y = y, x = x)) +
    annotate("text", label = "A", x = 85, y = 1.8, size = 6, colour = "black", family = "Times") +
    annotate("text", label = "B", x = 105, y = 2.7, size = 6, colour = "black", family = "Times") +
    annotate("text", label = "C", x = 150, y = 1.25, size = 6, colour = "black", family = "Times") +
    scale_fill_manual(values = cols, name = "") +
    annotate("text", label = " YP = A+B\n RP-HPE = A+C \n RP = A+B+C", x = 170, y = 2.3, size = 4, colour = "black", hjust = 0, family = "Times") +
    # annotate("text", label = expression(hp == 120 %*% pp / y), x = 200, y = 1.3, size = 4, colour = "black", hjust = 0, family = "Times") +
    xlab("Realized Yield") +
    ylab("Harvest Price ($/bushel)") +
    scale_x_continuous(breaks = c(50, 100, 120, 150, 200, 250)) +
    theme_bw() +
    theme(
      legend.position = "non",
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank()
    )
)
```

# Figures 2 and 3

```{r}
premium_data <-
  readRDS("results/premium_data.rds") %>%
  .[, insurance_type := factor(insurance_type, levels = c("YP", "RPHPE", "RP"))]
```

## Figure 2: Premium pyament amount (subsidized)

```{r}
ggplot(data = premium_data[coverage_level != 0.9, ]) +
  geom_line(aes(y = premium, x = APH, color = factor(coverage_level))) +
  facet_grid(. ~ insurance_type) +
  scale_color_discrete(name = "Coverage rate") +
  theme_bw() +
  ylab("Premium ($/acre)") +
  xlab("APH (bushel/acre)") +
  theme(
    legend.position = "bottom"
  )
```

## Figure 3: Premium rate (subsidized)

```{r}
ggplot(data = premium_data[coverage_level != 0.9, ]) +
  geom_line(aes(y = premium_rate * (1 - subsidy_level), x = APH, color = factor(coverage_level))) +
  facet_grid(. ~ insurance_type) +
  scale_color_discrete(name = "Coverage rate") +
  theme_bw() +
  ylab("Premium Rate ($/liability)") +
  xlab("APH (bushel/acre)") +
  theme(
    legend.position = "bottom"
  )
```

# Figures 4 and 5: Production Function

## Figure 4

```{r}
production_data <- readRDS("results/production_data.rds")


APH <- 130 # has no influence on the results
rate_yield <- APH
B <- 50000
N_seq <- seq(0, 250, by = 1)
N_len <- length(N_seq)
cov_level <- 0.85
sub_per <- 0.38
sim <- sim_gen(min_y, max_y, p_price, p_N, pvf, APH, rate_yield)

sim_results <- mclapply(1:N_len, sim, mc.cores = 6) %>%
  rbindlist()

#--- find mean, 10% and 90% of yield by N ---#
data_yield <-
  production_data %>%
  .[, .(
    yield = mean(yield),
    yield_10 = quantile(yield, prob = 0.1),
    yield_90 = quantile(yield, prob = 0.90)
  ),
  by = N
  ]

#--- find fits ---#
yield_gam <- gam(yield ~ s(N, k = 6), data = data_yield)
yield_10_gam <- gam(yield_10 ~ s(N, k = 6), data = data_yield)
yield_90_gam <- gam(yield_90 ~ s(N, k = 6), data = data_yield)

#--- create data for plotting ---#
data_plot <- data.table(N = seq(0, 230, length = 1000)) %>%
  .[, yield := predict.gam(yield_gam, newdata = .)] %>%
  .[, yield_10 := predict.gam(yield_10_gam, newdata = .)] %>%
  .[, yield_90 := predict.gam(yield_90_gam, newdata = .)]

#--- create the figure ---#
(
  g_yield <-
    ggplot(data = data_plot) +
    geom_ribbon(aes(x = N, ymin = yield_10, ymax = yield_90), fill = "gray", alpha = 0.4) +
    geom_line(aes(x = N, y = yield)) +
    xlab("Nitrogen rate (lb/acre)") +
    ylab("Yield (bushel/acre)") +
    scale_y_continuous(breaks = seq(60, 190, by = 10), limits = c(60, 190)) +
    scale_x_continuous(breaks = seq(0, 230, by = 20)) +
    theme_bw() +
    theme(
      legend.position = "bottom",
      panel.grid.minor = element_blank(),
      panel.grid.major = element_line(linetype = 2)
    )
)

```

# Figure 5: Yield density by N

```{r}
N_ls <- c(0, 50, 100, 200)
sub_data <-
  production_data %>%
  .[N %in% c(0, 50, 100, 200), ] %>%
  .[, N_txt := paste("N=", N, sep = "")] %>%
  .[, N_txt := factor(N_txt, levels = paste("N=", c(0, 50, 100, 200), sep = ""))]

g_dens <-
  ggplot(data = sub_data) +
  geom_density(aes(x = yield, fill = factor(N_txt)), alpha = 0.4, bw = 5) +
  scale_fill_discrete(name = "Nitrogen Rate (lb/acre)") +
  ylab("") +
  xlab("Yield (bu/acre)") +
  theme(
    legend.position = "bottom"
  )
```

# Figures 6: Optimal N choice (static)

```{r}
opt_N_s <-
  readRDS("results/opt_N_static.rds") %>%
  .[utility_type != "CA1" & coverage_level != 0.80, ] %>%
  .[utility_type == "CA2", utility_type := "CA"] %>%
  .[insurance_type == "RPHPE", insurance_type := "RP-HPE"] %>%
  .[, insurance_type := factor(insurance_type, levels = c("YP", "RP-HPE", "RP"))]

(
  g_stat_N <-
    ggplot(data = opt_N_s) +
    geom_line(aes(x = APH, y = N_star, color = utility_type)) +
    geom_vline(xintercept = 136.5, linetype = 2, size = 0.4) +
    facet_grid(coverage_level ~ insurance_type) +
    ylab("Optimal nitrogen rate (lb/acre)") +
    xlab("APH") +
    scale_y_continuous(breaks = 20 * (0:10)) +
    scale_x_continuous(breaks = 10 * (10:16), limits = c(120, 160)) +
    scale_color_discrete(name = "Utility Type") +
    theme_bw() +
    theme(
      legend.position = "bottom",
      panel.spacing = unit(0.5, "lines"),
      panel.grid.minor = element_blank(),
      panel.grid.major = element_line(linetype = 2),
      strip.background = element_rect(fill = NA)
    )
)
```


# Figure 7: Optimal N (dynamic)  

```{r}
w_cases <-
  cases %>%
  .[utility_type %in% c("RN", "CA2", "CR"), ] %>%
  .[coverage_level %in% c(0.7, 0.85, 0.9), ]

opt_N_d <-
  lapply(
    1:nrow(w_cases),
    \(x) {
      #--- set the coverage and subsidy level ---#
      cov_level <- w_cases[x, coverage_level]
      sub_per <- w_cases[x, subsidy_level]
      ins_type <- w_cases[x, insurance_type]
      util_type <- w_cases[x, utility_type]
      BI_results_file_name <- w_cases[x, BI_results_file_name]
      path_results_file_name <- w_cases[x, path_results_file_name]

      Nstar_gam <-
        readRDS(BI_results_file_name) %>%
        .[[2]] %>%
        #--- t = 20 ---#
        .[[30]]

      Nstar_data <-
        data.table(
          APH = APH_list
        ) %>%
        .[, N_star := predict(Nstar_gam, newdata = .)] %>%
        .[, coverage_level := cov_level] %>%
        .[, utility_type := util_type] %>%
        .[, insurance_type := ins_type]

      return(Nstar_data)
    }
  ) %>%
  rbindlist() %>%
  .[utility_type == "CA2", utility_type := "CA"] %>%
  .[insurance_type == "RPHPE", insurance_type := "RP-HPE"] %>%
  .[, insurance_type := factor(insurance_type, levels = c("YP", "RP-HPE", "RP"))]

(
  g_opt_N_fun <-
    ggplot(data = opt_N_d) +
    geom_line(aes(x = APH, y = N_star, color = utility_type)) +
    facet_grid(coverage_level ~ insurance_type) +
    scale_color_discrete(name = "Utility Type") +
    scale_y_continuous(breaks = seq(180, 205, by = 5), limits = c(180, 205)) +
    xlab("APH (bu/acre)") +
    ylab("Optimal nitrogen rate (lb/acre)") +
    theme(
      legend.position = "bottom"
    )
)
```

# Figure 8: Comparison of marginal benefits of N between the static and dynamic cases

```{r}
w_case <- cases[coverage_level == 0.85 & utility_type == "RN" & insurance_type == "RP", ]

production_data <-
  readRDS(w_case[, conc_prod_file_name]) %>%
  #--- APH = 136 ---#
  .[APH == 136, ] %>%
  .[APH_next <= APH_data$APH_min, APH_next := APH_data$APH_min] %>%
  .[APH_next >= APH_data$APH_max, APH_next := APH_data$APH_max] %>%
  .[, APH_norm := (APH_next - APH_data$APH_min) / (APH_data$APH_max - APH_data$APH_min)]

APH_mat <- BernBasis_fast(production_data[, APH_norm], Nk)
Bernstein_coef <-
  readRDS(w_case[, BI_results_file_name]) %>%
  .[[1]] %>%
  #--- t = 30 ---#
  .[[30]]

production_data[, VF := APH_mat %*% Bernstein_coef]

e_production_data <-
  production_data[, .(profit = mean(utility), VF = mean(VF)), by = N]

profit_gam <- gam(profit ~ s(N, k = 5), data = e_production_data)
VF_gam <- gam(VF ~ s(N, k = 5), data = e_production_data)

MP_data <-
  data.table(
    N = N_data$N_seq_for_search
  ) %>%
  #--- predict profit and add back N cost  ---#
  .[, revenue := predict.gam(profit_gam, newdata = .) + N * price_data$p_N * prod_data$acres] %>%
  .[, VF := predict.gam(VF_gam, newdata = .)] %>%
  .[, revenue_dif := revenue - shift(revenue, type = "lag")] %>%
  .[, VF_dif := VF - shift(VF, type = "lag")] %>%
  .[, tot_dif := revenue_dif + VF_dif] %>%
  .[, .(N, revenue_dif, tot_dif)] %>%
  melt(id.var = "N") %>%
  .[, MR_type := case_when(
    variable == "revenue_dif" ~ "MR_t",
    variable == "tot_dif" ~ "MR_t + VF_t"
  )]

(
g_mr <-
  ggplot(data = MP_data) +
  geom_line(aes(x = N, y = value / prod_data$acres / N_data$search_increment, color = MR_type), size = 0.4) +
  geom_line(data = data.table(x = N_data$N_seq_for_search, y = price_data$p_N), aes(x = x, y = y), color = "black") +
  scale_y_continuous(breaks = seq(0, 0.5, by = 0.1), limits = c(0, 0.5)) +
  scale_x_continuous(breaks = seq(0, 240, by = 20)) +
  ylab("$/acre") +
  xlab("N (lb/acre)") +
  theme_bw() +
  theme(
    legend.position = "bottom"
  )
)

```

# Table 2: Comparison of Static and Dynamic Optimal Nitrogen Rates by Coverage Rate, Risk Averseness, and Insurance Type

```{r}
opt_N_s_at <-
  opt_N_s %>%
  .[APH == 136, .(N_star, coverage_level, insurance_type, utility_type)] %>%
  .[, N_star := format(round(N_star, digits = 2), nsmall = 1)] %>%
  .[insurance_type == "RP-HPE", insurance_type := "RPHPE"] %>%
  .[, insurance_type := paste0(insurance_type, "_s")] %>%
  dcast(utility_type + coverage_level ~ insurance_type, value.var = "N_star")

opt_N_d_at <-
  opt_N_d %>%
  .[APH == 136, .(N_star, coverage_level, insurance_type, utility_type)] %>%
  .[, N_star := format(round(N_star, digits = 2), nsmall = 1)] %>%
  .[insurance_type == "RP-HPE", insurance_type := "RPHPE"] %>%
  .[, insurance_type := paste0(insurance_type, "_d")] %>%
  dcast(utility_type + coverage_level ~ insurance_type, value.var = "N_star")

opt_N_no_ins <-
  readRDS("results/opt_N_no_ins.rds") %>%
  .[utility_type != "CA1", ] %>%
  .[utility_type == "CA2", utility_type := "CA"] %>%
  .[, .(N_star, utility_type)] %>%
  .[, N_star := format(round(N_star, digits = 2), nsmall = 1)]

data_for_table <-
  opt_N_s_at[opt_N_d_at, on = .(utility_type, coverage_level)] %>%
  opt_N_no_ins[., on = .(utility_type)] %>%
  .[, YP := paste0("(", YP_s, ",", YP_d, ")")] %>%
  .[, `:=`(YP_s = NULL, YP_d = NULL)] %>%
  .[, RP := paste0("(", RP_s, ",", RP_d, ")")] %>%
  .[, `:=`(RP_s = NULL, RP_d = NULL)] %>%
  .[, RPHPE := paste0("(", RPHPE_s, ",", RPHPE_d, ")")] %>%
  .[, `:=`(RPHPE_s = NULL, RPHPE_d = NULL)] %>%
  .[, .(utility_type, coverage_level, N_star, YP, RPHPE, RP)]

library(flextable)
library(officer)

flextable(data_for_table) %>%
  merge_v(j = c(1, 3)) %>%
  align(align = "center", part = "all") %>%
  hline(i = c(3, 6), border = fp_border(color = "gray")) %>%
  set_header_labels(
    values = list(
      utility_type = "Utility Type",
      coverage_level = "Coverage Level",
      N_star = "No Insurance",
      YP = "(YPs, YPd)",
      RPHPE = "(RP-HPEs, RP-HPEd)",
      RP = "(RPs, RPd)"
    )
  ) %>%
  autofit()
```

# Appendix

## Figure D.1

```{r}
set.seed(398574895)

#++++++++++++++++++++++++++++++++++++
#+ Produce yield data
#++++++++++++++++++++++++++++++++++++
N <- 180
#--- set production parameters ---#
p_N <- prod_data$p_pars[1] + prod_data$p_pars[2] * sqrt(N) + prod_data$p_pars[3] * N
q_N <- prod_data$q_pars[1] + prod_data$q_pars[2] * sqrt(N) + prod_data$q_pars[3] * N

#--- find average yield conditional on N ---#
Y_mean <-
  qbetagen(runif(10000), p_N, q_N, prod_data$min_y, prod_data$max_y) %>%
  mean()

#--- generate yield series ---#
# first nine the same (for rolling average later)
Y_0 <- rep(Y_mean, 9)
U <- runif(50)
Y_gen <- qbetagen(U, p_N, q_N, prod_data$min_y, prod_data$max_y)
Y_true <- c(Y_0, Y_gen)

#++++++++++++++++++++++++++++++++++++
#+ True and approximate APH
#++++++++++++++++++++++++++++++++++++
#--- find true APH ---#
APH_true <-
  data.table(
    APH = na.omit(data.table::frollmean(Y_true, 10)),
    t = 1:50,
    type = "True"
  )

#--- approximate APH ---#
APH_app <- vector()
APH_app[1] <- Y_mean
for (i in 1:length(Y_gen)) {
  APH_app[i + 1] <- 0.9 * APH_app[i] + 0.1 * Y_gen[i]
}

APH_app <- data.table(
  APH = APH_app[-1],
  t = 1:50,
  type = "Approximated"
)

data <- rbind(APH_true, APH_app)

#++++++++++++++++++++++++++++++++++++
#+ Visualize (compare the two)
#++++++++++++++++++++++++++++++++++++
ggplot(data = data) +
  geom_line(aes(x = t, y = APH, color = type)) +
  ylim(100, 150) +
  scale_color_discrete(name = "") +
  theme(
    legend.position = "bottom"
  )
```


## Figure D.2: Path of expected optimal nitrogen rate by insurance type

```{r}
w_cases <-
  cases %>%
  .[utility_type %in% c("RN", "CA2", "CR"), ] %>%
  .[coverage_level %in% c(0.7, 0.85, 0.9), ]

opt_N_d <-
  lapply(
    1:nrow(w_cases),
    \(x) {
      #--- set the coverage and subsidy level ---#
      cov_level <- w_cases[x, coverage_level]
      sub_per <- w_cases[x, subsidy_level]
      ins_type <- w_cases[x, insurance_type]
      util_type <- w_cases[x, utility_type]
      path_results_file_name <- w_cases[x, path_results_file_name]

      path_data <-
        readRDS(path_results_file_name) %>%
        .[, coverage_level := cov_level] %>%
        .[, utility_type := util_type] %>%
        .[, insurance_type := ins_type]
    }
  ) %>%
  rbindlist() %>%
  .[utility_type == "CA2", utility_type := "CA"] %>%
  .[insurance_type == "RPHPE", insurance_type := "RP-HPE"] %>%
  .[, insurance_type := factor(insurance_type, levels = c("YP", "RP-HPE", "RP"))]

ggplot(data = opt_N_d) +
  geom_line(aes(y = N, x = t, color = utility_type)) +
  facet_grid(coverage_level ~ insurance_type) +
  scale_color_discrete(name = "Utility Type") +
  ylab("Expected value of nitrogen rate (lb/acre)") +
  xlab("Year") +
  theme_bw() +
  theme(
    legend.position = "bottom",
    strip.background = element_rect(fill = NA, color = NA)
  )
```